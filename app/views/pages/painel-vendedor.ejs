<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Painel do Vendedor - DOP</title>
    <link rel="stylesheet" href="/css/conta.css">
</head>
<body>
    <header>
        <nav>
            <a href="/" class="back-button">&#8249;</a>
        </nav>
        <h1>Painel do Vendedor</h1>
    </header>

    <main>
        <section class="account-details">
            <article class="info-card">
                <header>
                    <h3>Gerenciar Produtos</h3>
                    <button class="edit-btn" onclick="openAddProductModal()">‚ûï</button>
                </header>
                <div id="produtos-lista">
                    <p>Carregando produtos...</p>
                </div>
            </article>
        </section>
    </main>

    <dialog id="addProductModal" class="modal">
        <article class="modal-content">
            <header>
                <h3>Adicionar Produto</h3>
                <button class="close" onclick="closeAddProductModal()">&times;</button>
            </header>
            <form id="addProductForm">
                <fieldset>
                    <label for="nomeProduto">Nome:</label>
                    <input type="text" id="nomeProduto" required>
                    
                    <label for="precoProduto">Pre√ßo (R$):</label>
                    <input type="number" id="precoProduto" step="0.01" required>
                    
                    <label for="estoqueProduto">Estoque:</label>
                    <input type="number" id="estoqueProduto" value="999" required>
                    
                    <label for="categoriaProduto">Categoria:</label>
                    <select id="categoriaProduto" required>
                        <option value="">Selecione uma categoria</option>
                    </select>
                    
                    <label for="imagemProduto">Imagem:</label>
                    <input type="file" id="imagemProduto" accept="image/*">
                </fieldset>
                <footer>
                    <button type="button" onclick="closeAddProductModal()">Cancelar</button>
                    <button type="submit">Adicionar</button>
                </footer>
            </form>
        </article>
    </dialog>

    <script>
        async function loadProdutos() {
            try {
                const response = await fetch('/api/produtos', { credentials: 'same-origin' });
                const produtos = await response.json();
                
                const lista = document.getElementById('produtos-lista');
                if (produtos.length === 0) {
                    lista.innerHTML = '<p>Nenhum produto cadastrado. <button onclick="setupProdutosPadrao()">Criar produtos padr√£o</button></p>';
                } else {
                    lista.innerHTML = produtos.map(produto => `
                        <div class="produto-item" style="border: 1px solid #ddd; padding: 10px; margin: 5px 0; border-radius: 5px;">
                            <strong>${produto.nome_prod}</strong> - R$ ${produto.valor_unitario}
                            <span style="float: right;">
                                <button onclick="editarProduto(${produto.id_prod})" style="margin-left: 5px;">‚úèÔ∏è</button>
                                <button onclick="deletarProduto(${produto.id_prod})" style="margin-left: 5px;">üóëÔ∏è</button>
                            </span>
                        </div>
                    `).join('');
                }
            } catch (error) {
                console.error('Erro ao carregar produtos:', error);
            }
        }

        async function setupProdutosPadrao() {
            try {
                const response = await fetch('/api/setup-produtos', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'same-origin'
                });
                
                const result = await response.json();
                if (result.success) {
                    alert('Produtos padr√£o criados com sucesso!');
                    loadProdutos();
                } else {
                    alert('Erro: ' + result.error);
                }
            } catch (error) {
                alert('Erro ao criar produtos padr√£o');
            }
        }

        function openAddProductModal() {
            document.getElementById('addProductModal').style.display = 'block';
        }

        function closeAddProductModal() {
            document.getElementById('addProductModal').style.display = 'none';
            document.getElementById('addProductForm').reset();
        }

        async function handleAddProduct(event) {
            event.preventDefault();
            
            const nome = document.getElementById('nomeProduto').value;
            const preco = document.getElementById('precoProduto').value;
            const estoque = document.getElementById('estoqueProduto').value;
            const categoria = document.getElementById('categoriaProduto').value;
            const imagemFile = document.getElementById('imagemProduto').files[0];
            
            if (!categoria) {
                alert('Selecione uma categoria!');
                return;
            }
            
            try {
                let imagemId = 1; // padr√£o
                
                // Upload da imagem se fornecida
                if (imagemFile) {
                    const formData = new FormData();
                    formData.append('imagem', imagemFile);
                    
                    const uploadResponse = await fetch('/api/upload-imagem', {
                        method: 'POST',
                        credentials: 'same-origin',
                        body: formData
                    });
                    
                    if (uploadResponse.ok) {
                        const uploadResult = await uploadResponse.json();
                        imagemId = uploadResult.id_imagem;
                    }
                }
                
                // Criar produto
                const response = await fetch('/api/produtos', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'same-origin',
                    body: JSON.stringify({
                        nome_prod: nome,
                        valor_unitario: preco,
                        qtde_estoque: estoque,
                        id_categoria: categoria,
                        id_imagem: imagemId
                    })
                });
                
                const result = await response.json();
                if (response.ok) {
                    alert('Produto adicionado com sucesso!');
                    closeAddProductModal();
                    loadProdutos();
                } else {
                    alert('Erro: ' + (result.error || 'Erro desconhecido'));
                }
            } catch (error) {
                alert('Erro ao adicionar produto');
            }
        }

        async function deletarProduto(id) {
            if (confirm('Tem certeza que deseja deletar este produto?')) {
                try {
                    const response = await fetch(`/api/produtos/${id}`, {
                        method: 'DELETE',
                        credentials: 'same-origin'
                    });
                    
                    if (response.ok) {
                        alert('Produto deletado com sucesso!');
                        loadProdutos();
                    } else {
                        alert('Erro ao deletar produto');
                    }
                } catch (error) {
                    alert('Erro ao deletar produto');
                }
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            loadProdutos();
            loadCategorias();
            
            const addForm = document.getElementById('addProductForm');
            if (addForm) {
                addForm.addEventListener('submit', handleAddProduct);
            }
        });
        
        async function loadCategorias() {
            try {
                const response = await fetch('/api/categorias', { credentials: 'same-origin' });
                const categorias = await response.json();
                
                const select = document.getElementById('categoriaProduto');
                select.innerHTML = '<option value="">Selecione uma categoria</option>';
                
                categorias.forEach(categoria => {
                    const option = document.createElement('option');
                    option.value = categoria.id_categoria;
                    option.textContent = categoria.nome_categoria;
                    select.appendChild(option);
                });
                
                // Adicionar op√ß√£o para criar nova categoria
                const novaOption = document.createElement('option');
                novaOption.value = 'nova';
                novaOption.textContent = '+ Criar nova categoria';
                select.appendChild(novaOption);
                
                select.addEventListener('change', function() {
                    if (this.value === 'nova') {
                        const nome = prompt('Nome da nova categoria:');
                        if (nome) {
                            criarCategoria(nome);
                        } else {
                            this.value = '';
                        }
                    }
                });
            } catch (error) {
                console.error('Erro ao carregar categorias:', error);
            }
        }
        
        async function criarCategoria(nome) {
            try {
                const response = await fetch('/api/categorias', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    credentials: 'same-origin',
                    body: JSON.stringify({ nome_categoria: nome })
                });
                
                if (response.ok) {
                    loadCategorias();
                    alert('Categoria criada com sucesso!');
                } else {
                    alert('Erro ao criar categoria');
                }
            } catch (error) {
                alert('Erro ao criar categoria');
            }
        }
    </script>
</body>
</html>